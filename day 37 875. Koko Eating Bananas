class Solution {
   private boolean canFinish(int k, int[] piles, int h) {
        int time = 0;
        for (int pile : piles) {
            time += (pile + k - 1) / k;
        }
        return time <= h;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int low = 1;
        int high = Arrays.stream(piles).max().getAsInt();

        while (low < high) {
            int mid = low + (high - low) / 2;
            if (canFinish(mid, piles, h)) {
                high = mid;
            } else {
                low = mid + 1;
            }
        }

        return low;
    }
}
